name: CI Pipeline

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image for CI
      run: docker build -f Docker/Dockerfile.ci -t ghcr.io/robertgawron/hardwaredatalogger:v1.1 .

    - name: Push Docker image to GitHub Container Registry
      run: docker push ghcr.io/robertgawron/hardwaredatalogger:v1.1

  run-unit-tests:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Run Unit Tests
      run: docker run --rm ghcr.io/robertgawron/hardwaredatalogger:v1.1 /bin/bash -c "cd /app && mkdir -p build && cd build && cmake .. && make && cd /app/build/Test/UT/ && ctest --output-on-failure"

  run-code-coverage:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Run Code Coverage
      run: docker run --rm -v ${{ github.workspace }}/coverage:/app/build/coverage ghcr.io/robertgawron/hardwaredatalogger:v1.1 /bin/bash -c "cd /app/build && cmake -DCMAKE_BUILD_TYPE=Debug .. ; make -j 23 ; make coverage"

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: code_coverage/*

  run-docs-coverage:
      needs: build-and-push
      runs-on: ubuntu-latest
  
      steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Run Docs Coverage
        run: docker run --rm -v ${{ github.workspace }}/coverage:/app/build/coverage ghcr.io/robertgawron/hardwaredatalogger:v1.1 /bin/bash -c "cd /app/build && cmake -DCMAKE_BUILD_TYPE=Debug .. ; make -j 23 ; make missing_docs"
  
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: docs-coverage-report
          path: docs_coverage/*

  run-static-analysis:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Run Static Analysis
      run: docker run --rm -v ${{ github.workspace }}/static_analyse:/app/build/static_analyse ghcr.io/robertgawron/hardwaredatalogger:v1.1 /bin/bash -c "cd /app/build && cmake -DCMAKE_BUILD_TYPE=Debug .. ; make -j 23 ; make static_analyse"

    - name: Upload Static Analysis Report
      uses: actions/upload-artifact@v2
      with:
        name: static-analysis-report
        path: static_analyse/*

  run-dynamic-analysis:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Run Dynamic Analysis
      run: docker run --rm -v ${{ github.workspace }}/dynamic_analyse:/app/build/dynamic_analyse ghcr.io/robertgawron/hardwaredatalogger:v1.1 /bin/bash -c "cd /app/build && cmake -DENABLE_VALGRIND=ON .. && make -j 23 && make dynamic_analyse ; chmod -R 777 /app/build/dynamic_analyse"

    - name: Upload Dynamic Analysis Report
      uses: actions/upload-artifact@v2
      with:
        name: dynamic-analysis-report
        path: dynamic_analyse/*